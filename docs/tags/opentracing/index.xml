<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opentracing on Shining Moon</title>
    <link>https://blog.monsterxx03.com/tags/opentracing/</link>
    <description>Recent content in Opentracing on Shining Moon</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>monsterxx03</copyright>
    <lastBuildDate>Fri, 15 Nov 2019 14:05:59 +0800</lastBuildDate>
    <atom:link href="https://blog.monsterxx03.com/tags/opentracing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>集成 opentracing</title>
      <link>https://blog.monsterxx03.com/2019/11/15/%E9%9B%86%E6%88%90-opentracing/</link>
      <pubDate>Fri, 15 Nov 2019 14:05:59 +0800</pubDate>
      <guid>https://blog.monsterxx03.com/2019/11/15/%E9%9B%86%E6%88%90-opentracing/</guid>
      <description>&lt;p&gt;之前用过 datadog 的 tracing 功能, 非常好用, 但是很贵(单台30$), 迁移到 k8s 后, 监控迁移到了 prometheus, 也把 datadog 的 tracing 去掉了.datadog 的 tracing 也是 opentracing 的一种实现, 索性就换上开源实现.&lt;/p&gt;&#xA;&lt;p&gt;tracing 系统是分布式系统中很好用的 performance tuning 工具, opentracing 只是一个标准，里面定义了 span, scope, tracer 等概念，但不规定 tracing&#xA;数据应该怎么 encoding, 怎么存储, 跨进程的 span 数据怎么串起来.&lt;/p&gt;&#xA;&lt;p&gt;首先要挑选一个开源的 tracer 实现，tracer 用来接受业务系统发出的 encode 过的 span 数据,并存储，提供一个界面供查询. 我选的是 jaeger, go实现的,部署起来比较轻量级,&#xA;也是 cncf 的项目, 还有个 jaeger-operator 方便部署.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
