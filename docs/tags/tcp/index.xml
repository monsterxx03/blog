<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tcp on Shining Moon</title>
    <link>https://blog.monsterxx03.com/tags/tcp/</link>
    <description>Recent content in Tcp on Shining Moon</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>monsterxx03</copyright>
    <lastBuildDate>Sat, 29 Dec 2018 15:14:46 +0800</lastBuildDate>
    <atom:link href="https://blog.monsterxx03.com/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从去年的一个patch说起</title>
      <link>https://blog.monsterxx03.com/2018/12/29/%E4%BB%8E%E5%8E%BB%E5%B9%B4%E7%9A%84%E4%B8%80%E4%B8%AApatch%E8%AF%B4%E8%B5%B7/</link>
      <pubDate>Sat, 29 Dec 2018 15:14:46 +0800</pubDate>
      <guid>https://blog.monsterxx03.com/2018/12/29/%E4%BB%8E%E5%8E%BB%E5%B9%B4%E7%9A%84%E4%B8%80%E4%B8%AApatch%E8%AF%B4%E8%B5%B7/</guid>
      <description>&lt;p&gt;去年对线上业务做了一些性能优化, 当时把 http client 从 requests 换成了 geventhttpclient ,&#xA;上线后发起 rpc 调用的 server 整体负载低了很多, 但 client 端 latency 却高了很多, 经过 debug&#xA;觉得问题是 geventhttpclient 把 header 和 body 通过两次 sock send 发出的额外开销造成的, 尝试&#xA;修改成一次 send 后 latency 就恢复了: &lt;a href=&#34;https://github.com/gwik/geventhttpclient/pull/85&#34;&gt;https://github.com/gwik/geventhttpclient/pull/85&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近在调试 gunicorn 的代码时候, 看到它建立 socket 的时候设置了 TCP_NODELAY, 在很多项目里看到过这个&#xA;tcp option, 但没细究过, &lt;code&gt;man tcp&lt;/code&gt; 得知是用来关闭 tcp 里的 nagle 算法的. nagle 在 linux 的&#xA;默认 tcp 协议栈里是开启的, 当发送的数据包 size 小于 mss 的时候会在内存里 buffer 起来, 积累起来后再发送,&#xA;目的是提高带宽利用率, 毕竟 payload 只发一次字节也要带上 40 字节的 ip+tcp header.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
