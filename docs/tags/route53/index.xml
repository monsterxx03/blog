<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Route53 on Shining Moon</title>
    <link>https://blog.monsterxx03.com/tags/route53/</link>
    <description>Recent content in Route53 on Shining Moon</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>monsterxx03</copyright>
    <lastBuildDate>Fri, 29 Sep 2017 08:55:18 +0000</lastBuildDate>
    <atom:link href="https://blog.monsterxx03.com/tags/route53/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get all invalid PTR record on  Route53</title>
      <link>https://blog.monsterxx03.com/2017/09/29/get-all-invalid-ptr-record-on-route53/</link>
      <pubDate>Fri, 29 Sep 2017 08:55:18 +0000</pubDate>
      <guid>https://blog.monsterxx03.com/2017/09/29/get-all-invalid-ptr-record-on-route53/</guid>
      <description>&lt;p&gt;I use autoscaling group to manage stateless servers. Servers go up and down every day.&lt;/p&gt;&#xA;&lt;p&gt;Once server is up, I will add a PTR record for it’s internal ip. But when it’s down, I didn’t cleanup the PTR record. As times fly, a lot of invalid PTR records left in Route53.&lt;/p&gt;&#xA;&lt;p&gt;To cleanup those PTR records realtime, you can write a lambda function, use server termination event as trigger. But how to cleanup the old records at once?&lt;/p&gt;&#xA;&lt;p&gt;Straightforward way is write a script to call AWS API to get a PTR list, get ip from record, test whether the ip is live, if not, delete it.&lt;/p&gt;&#xA;&lt;p&gt;Since use awscli to delete a Route53 record is very troublesome (involve json format), you’d better write a python script to delete them. I just demo some ideas to collect those records via shell.&lt;/p&gt;&#xA;&lt;p&gt;You can do it in a single line, but make things clear and easy to debug, I split it into several steps.&lt;/p&gt;&#xA;&lt;h2 id=&#34;get-ptr-record-list&#34;&gt;Get PTR record list&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;aws route53 list-resource-record-sets  --hosted-zone-id xxxxx --query &amp;quot;ResourceRecordSets[?Type==&#39;PTR&#39;].Name&amp;quot; |  grep -Po &#39;&amp;quot;(.+?)&amp;quot;&#39; | tr -d \&amp;quot; &amp;gt; ptr.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ptr.txt will contain lines like:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;1.0.0.10.in-addr.arpa.&#xA;2.0.0.10.in-addr.arpa.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;get-ip-list-from-ptr-records&#34;&gt;Get ip list from PTR records&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;cat ptr.txt | while read -r line ; do echo -n $line | tac -s. | cut -d. -f3- | sed &#39;s/.$//&#39; ; done &amp;gt; ip.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ip.txt:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
