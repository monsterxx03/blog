<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Shining Moon</title>
    <link>https://blog.monsterxx03.com/tags/linux/</link>
    <description>Recent content in linux on Shining Moon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>monsterxx03</copyright>
    <lastBuildDate>Wed, 26 Aug 2020 23:06:01 +0800</lastBuildDate>
    
	<atom:link href="https://blog.monsterxx03.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux 进程虚拟内存分布</title>
      <link>https://blog.monsterxx03.com/2020/08/26/linux-%E8%BF%9B%E7%A8%8B%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83/</link>
      <pubDate>Wed, 26 Aug 2020 23:06:01 +0800</pubDate>
      
      <guid>https://blog.monsterxx03.com/2020/08/26/linux-%E8%BF%9B%E7%A8%8B%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83/</guid>
      <description>巩固下基础知识. 现代系统都运行在保护模式(protected mode)下, x86_64 下用户态程序启动时候都会被分配一片虚拟内存, 大小是 2^47 (128TiB), 但目前 cpu 只能映射 2^46 (64TiB), 通过 page table 将虚拟内存中的地址(vma)和物理地址映射起来. 以前的 BIOS 跑在 实模式下(real mode), 直接访问物理内存, 不过只能访问前 2^20(1MiB) 的空间. Linux 下 /proc/$pid/maps 文件内容就是进程的虚拟内存分布. 每一列含义通过 man 5 proc 看, 不重复了. 网上的例子都有点过时, 在比较新的 linux 发行版里, 默认</description>
    </item>
    
    <item>
      <title>Debug Skills on Linux</title>
      <link>https://blog.monsterxx03.com/2018/12/03/debug-skills-on-linux/</link>
      <pubDate>Mon, 03 Dec 2018 22:47:51 +0800</pubDate>
      
      <guid>https://blog.monsterxx03.com/2018/12/03/debug-skills-on-linux/</guid>
      <description>This post will show several commands used for debugging on linux server, all examples are tested on ubuntu 18.04, some tools are not installed by default, you can installl by sudo apt install xxx. Some commands must be used via sudo.
System resources can be classified in three main categories: compute, storage, and network. Usually, when you come to a performance issue, it&amp;rsquo;s always caused by exhaustion of those resources.
Universal metric: System load There&amp;rsquo;re several ways to get system load, w, uptime, top, cat /proc/loadavg
uptime example:
03:34:23 up 20:31, 1 user, load average: 1.02, 0.65, 0.45  Top right corner three values named load average is system load.
They means: average system load during last minute/last 5 minutes/last 15 minutes periods.
If load/(# of cpu core) &amp;gt; 1 means there&amp;rsquo;re tasks pending in cpu queue. Usually, you will feel slow.
It&amp;rsquo;s different with cpu utilization. CPU utilization is a metrics shows how busy cpu is handling tasks.
If system load is high, means tasks are pending in CPU queue, maybe a result of:
 High cpu usage. Poor disk performance(disk io). Exhaustion of ram. &amp;hellip;  free free -k/-m/-g show memory usage in KB/MB/GB
free -h humanize output (automatically show in KB/MB/GB&amp;hellip;)</description>
    </item>
    
  </channel>
</rss>